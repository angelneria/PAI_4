name: DevSecOps Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          cd escapadas_a_tu_medida
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up database
        run: |
          cd escapadas_a_tu_medida
          python manage.py makemigrations
          python manage.py migrate

      - name: Run tests
        run: |
          cd escapadas_a_tu_medida
          python manage.py test

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: escapadas_a_tu_medida
          args: >
            -Dsonar.projectKey=angelneria_PAI_4
            -Dsonar.organization=angelneria
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Download SonarQube security hotspots in JSON format
        run: |
          curl -u "${{ secrets.SONAR_TOKEN }}:" \
          "https://sonarcloud.io/api/hotspots/search?projectKey=angelneria_PAI_4" \
          -o sonar-report.json

      - name: Reimport SonarQube report to DefectDojo
        run: |
          curl -X POST "https://1107-80-31-44-98.ngrok-free.app/api/v2/reimport-scan/" \
          -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_KEY }}" \
          -H "Content-Type: multipart/form-data" \
          -F "product_name=PAI4" \
          -F "engagement_name=Pruebas de vulnerabilidades con sonarcloud, trivy y dependabot" \
          -F "engagement=1" \
          -F "scan_type=SonarQube API Import" \
          -F "file=@sonar-report.json" \
          -F "close_old_findings=True"

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.61.0/trivy_0.61.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.61.0_Linux-64bit.deb

      - name: Run Trivy scan and save report
        run: |
          trivy fs --severity HIGH,CRITICAL --ignore-unfixed --format json --output trivy-report.json .

      - name: Process and format Trivy report
        run: |
          echo "## Trivy Vulnerability Report" > summary.md
          echo "### Vulnerabilities Found: " >> summary.md
          jq -r '.Results[] | select(.Vulnerabilities != null) | .Vulnerabilities[] | "- **Title**: \(.Title)\n  - **Severity**: \(.Severity)\n  - **PkgName**: \(.PkgName)\n  - **Fixed Version**: \(.FixedVersion)\n  - **Description**: \(.Description)\n  - [Link to CVE](\(.PrimaryURL))\n" ' trivy-report.json >> summary.md

      - name: Create GitHub issue with formatted Trivy report
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "Trivy Vulnerability Report"
          content-filepath: summary.md
          labels: security, vulnerability

      - name: Reimport Trivy report to DefectDojo
        run: |
          curl -X POST "https://1107-80-31-44-98.ngrok-free.app/api/v2/reimport-scan/" \
          -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_KEY }}" \
          -H "Content-Type: multipart/form-data" \
          -F "product_name=PAI4" \
          -F "product_name=PAI4" \
          -F "engagement_name=Pruebas de vulnerabilidades con sonarcloud, trivy y dependabot" \
          -F "scan_type=Trivy Scan" \
          -F "file=@trivy-report.json" \
          -F "close_old_findings=True"
