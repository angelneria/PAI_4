name: DevSecOps Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Configura Python
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Instala dependencias
      - name: Install dependencies
        run: |
          cd escapadas_a_tu_medida
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Configura la base de datos para pruebas
      - name: Set up database
        run: |
          cd escapadas_a_tu_medida
          python manage.py makemigrations
          python manage.py migrate

      # Corre los tests
      - name: Run tests
        run: |
          cd escapadas_a_tu_medida
          python manage.py test

      # Dependabot (Gestión de dependencias)
      - name: Dependabot
        run: echo "Dependabot se configura automáticamente en .github/dependabot.yml"

      # OWASP Dependency-Check
      - name: Run OWASP Dependency-Check
        run: |
          curl -L https://github.com/jeremylong/DependencyCheck/releases/download/v8.3.1/dependency-check-8.3.1-release.zip -o dependency-check.zip
          unzip dependency-check.zip -d dependency-check
          dependency-check/bin/dependency-check.sh --project escapadas_a_tu_medida --scan escapadas_a_tu_medida --format HTML --out dependency-check-report.html

      # Semgrep (IAST)
      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep

      - name: Run Semgrep
        run: |
          semgrep --config "p/ci" escapadas_a_tu_medida

      # OWASP ZAP (DAST)
      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker pull owasp/zap2docker-stable
          docker run -v $(pwd):/zap/wrk:rw -t owasp/zap2docker-stable zap-baseline.py -t http://localhost:8000 -r zap-report.html