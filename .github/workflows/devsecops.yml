name: DevSecOps Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'  

      - name: Install dependencies
        run: |
          cd escapadas_a_tu_medida
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up database
        run: |
          cd escapadas_a_tu_medida
          python manage.py makemigrations
          python manage.py migrate

      - name: Run tests
        run: |
          cd escapadas_a_tu_medida
          python manage.py test

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: escapadas_a_tu_medida
          args: >
            -Dsonar.projectKey=angelneria_PAI_4
            -Dsonar.organization=angelneria
            -Dsonar.report.export.path=sonar-report.json
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.61.0/trivy_0.61.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.61.0_Linux-64bit.deb

      - name: Run Trivy scan and save report
        run: |
          trivy fs --severity HIGH,CRITICAL --ignore-unfixed --format json --output trivy-report.json .

      - name: Generate Dependabot Report
        run: |
          echo "Running Dependabot Scan..."
          gh security alert list --repo ${{ github.repository }} --format json > dependabot-report.json
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify Reports Before Upload
        run: |
          echo "Verifying generated reports..."
          ls -l sonar-report.json || echo "❌ SonarQube report not found!"
          ls -l trivy-report.json || echo "❌ Trivy report not found!"
          ls -l dependabot-report.json || echo "❌ Dependabot report not found!"

      - name: Upload SonarQube report to DefectDojo
        if: success()
        run: |
          response=$(curl -s -X POST "https://demo.defectdojo.org/api/v2/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_KEY }}" \
            -H "accept: application/json" \
            -H "Content-Type: multipart/form-data" \
            -F "scan_type=SonarQube Scan" \
            -F "engagement=17" \
            -F "test_title=SonarQube Security Report" \
            -F "file=@$(pwd)/sonar-report.json")

          echo "DefectDojo Response: $response"

      - name: Upload Trivy report to DefectDojo
        if: success()
        run: |
          response=$(curl -s -X POST "https://demo.defectdojo.org/api/v2/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_KEY }}" \
            -H "accept: application/json" \
            -H "Content-Type: multipart/form-data" \
            -F "scan_type=Trivy Scan" \
            -F "engagement=17" \
            -F "test_title=Trivy Security Report" \
            -F "file=@$(pwd)/trivy-report.json")

          echo "DefectDojo Response: $response"

